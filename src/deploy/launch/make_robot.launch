<launch>
  <!-- Variable Arguments -->
  <arg name="model"/> <!-- waffle_pi, waffle, burger-->
  <arg name="namespace"/>
  <arg name="initial_pose_x"/>
  <arg name="initial_pose_y"/>
  <arg name="initial_pose_a"     default="0.0"/>       <!-- yaw -->

  <!-- Static Arguments -->
  <arg name="move_forward_only" default="false"/>
  <arg name="use_map_topic"     default="false"/>
  <arg name="scan_topic"        default="$(arg namespace)/scan"/>
  <arg name="odom_frame_id"     default="$(arg namespace)/odom"/>
  <arg name="base_frame_id"     default="$(arg namespace)/base_footprint"/>
  <arg name="cmd_vel_topic"     default="$(arg namespace)/cmd_vel" />
  <arg name="odom_topic"        default="$(arg namespace)/odom" />
  <arg name="init_pose"         default="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -z 0.0"/>
  <arg name="global_frame_id"   default="map"/>

  <!-- Create robots -->
  <param name="robot_description"
    command="$(find xacro)/xacro.py $(find deploy)/param/models/$(arg model).urdf.xacro" />

  <group ns="$(arg namespace)">
    <param name="tf_prefix"  value="$(arg namespace)"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
        args="$(arg init_pose) -urdf -param /robot_description -model $(arg namespace)"
        respawn="false" output="screen"/>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>
  </group>

  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="$(arg namespace)_amcl">
    <param name="use_map_topic"             value="$(arg use_map_topic)"/>

    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="3000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.20"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_range"           value="3.5"/>
    <param name="laser_max_beams"           value="180"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    
    <param name="odom_frame_id"             value="$(arg odom_frame_id)"/>
    <param name="base_frame_id"             value="$(arg base_frame_id)"/>
    <param name="global_frame_id"           value="$(arg global_frame_id)"/>

    <remap from="initialpose"               to="$(arg namespace)/initialpose"/>
    <remap from="amcl_pose"                 to="$(arg namespace)/amcl_pose"/>
    <remap from="particlecloud"             to="$(arg namespace)/particlecloud"/>
  </node>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="$(arg namespace)_move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    
    <rosparam file="$(find deploy)/param/costmap_common_params_$(arg model).yaml"    command="load" ns="global_costmap" />
    <rosparam file="$(find deploy)/param/costmap_common_params_$(arg model).yaml"    command="load" ns="local_costmap" />
    <rosparam file="$(find deploy)/param/local_costmap_params.yaml"                  command="load" />
    <rosparam file="$(find deploy)/param/global_costmap_params.yaml"                 command="load" />
    <rosparam file="$(find deploy)/param/move_base_params.yaml"                      command="load" />
    <rosparam file="$(find deploy)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <rosparam file="$(find deploy)/param/global_planner_params.yaml"                 command="load" />
    <rosparam file="$(find deploy)/param/navfn_global_planner_params.yaml"           command="load" />

    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame"     value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame"      value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame"  value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id"   value="$(arg odom_frame_id)"/>

    <remap from="cmd_vel"                                                            to="$(arg cmd_vel_topic)"/>
    <remap from="odom"                                                               to="$(arg odom_topic)"/>
    <remap from="scan"                                                               to="$(arg scan_topic)"/>
    <remap from="map"                                                                to="map" />
    <remap from="move_base_simple/goal"				                                 to="$(arg namespace)/move_base_simple/goal" />
    <remap from="move_base/DWAPlannerROS/cost_cloud"                                 to="$(arg namespace)/move_base/DWAPlannerROS/cost_cloud" />
    <remap from="move_base/DWAPlannerROS/global_plan"				                 to="$(arg namespace)/move_base/DWAPlannerROS/global_plan" />
    <remap from="move_base/DWAPlannerROS/local_plan"				                 to="$(arg namespace)/move_base/DWAPlannerROS/local_plan" />
    <remap from="move_base/DWAPlannerROS/parameter_descriptions"	                 to="$(arg namespace)/move_base/DWAPlannerROS/parameter_descriptions" />
    <remap from="move_base/DWAPlannerROS/parameter_updates"		                     to="$(arg namespace)/move_base/DWAPlannerROS/parameter_updates" />
    <remap from="move_base/DWAPlannerROS/trajectory_cloud"			                 to="$(arg namespace)/move_base/DWAPlannerROS/trajectory_cloud" />
    <remap from="move_base/NavfnROS/plan"				                             to="$(arg namespace)/move_base/NavfnROS/plan" />
    <remap from="move_base/cancel"				                                     to="$(arg namespace)/move_base/cancel" />
    <remap from="move_base/current_goal"				                             to="$(arg namespace)/move_base/current_goal" />
    <remap from="move_base/feedback"				                                 to="$(arg namespace)/move_base/feedback" />
    <remap from="move_base/global_costmap/costmap"				                     to="$(arg namespace)/move_base/global_costmap/costmap" />
    <remap from="move_base/global_costmap/costmap_updates"			                 to="$(arg namespace)/move_base/global_costmap/costmap_updates" />
    <remap from="move_base/global_costmap/footprint"				                 to="$(arg namespace)/move_base/global_costmap/footprint" />
    <remap from="move_base/global_costmap/inflation_layer/parameter_descriptions"    to="$(arg namespace)/move_base/global_costmap/inflation_layer/parameter_descriptions" />
    <remap from="move_base/global_costmap/inflation_layer/parameter_updates"		 to="$(arg namespace)/move_base/global_costmap/inflation_layer/parameter_updates" />
    <remap from="move_base/global_costmap/obstacle_layer/parameter_descriptions"	 to="$(arg namespace)/move_base/global_costmap/obstacle_layer/parameter_descriptions" />
    <remap from="move_base/global_costmap/obstacle_layer/parameter_updates"			 to="$(arg namespace)/move_base/global_costmap/obstacle_layer/parameter_updates" />
    <remap from="move_base/global_costmap/parameter_descriptions"				     to="$(arg namespace)/move_base/global_costmap/parameter_descriptions" />
    <remap from="move_base/global_costmap/parameter_updates"				         to="$(arg namespace)/move_base/global_costmap/parameter_updates" />
    <remap from="move_base/global_costmap/static_layer/parameter_descriptions"		 to="$(arg namespace)/move_base/global_costmap/static_layer/parameter_descriptions" />
    <remap from="move_base/global_costmap/static_layer/parameter_updates"			 to="$(arg namespace)/move_base/global_costmap/static_layer/parameter_updates" />
    <remap from="move_base/goal"				                                     to="$(arg namespace)/move_base/goal" />
    <remap from="move_base/local_costmap/costmap"				                     to="$(arg namespace)/move_base/local_costmap/costmap" />
    <remap from="move_base/local_costmap/costmap_updates"				             to="$(arg namespace)/move_base/local_costmap/costmap_updates" />
    <remap from="move_base/local_costmap/footprint"                                  to="$(arg namespace)/move_base/local_costmap/footprint" />
    <remap from="move_base/local_costmap/inflation_layer/parameter_descriptions"	 to="$(arg namespace)/move_base/local_costmap/inflation_layer/parameter_descriptions" />
    <remap from="move_base/local_costmap/inflation_layer/parameter_updates"			 to="$(arg namespace)/move_base/local_costmap/inflation_layer/parameter_updates" />
    <remap from="move_base/local_costmap/obstacle_layer/parameter_descriptions"		 to="$(arg namespace)/move_base/local_costmap/obstacle_layer/parameter_descriptions" />
    <remap from="move_base/local_costmap/obstacle_layer/parameter_updates"			 to="$(arg namespace)/move_base/local_costmap/obstacle_layer/parameter_updates" />
    <remap from="move_base/local_costmap/parameter_descriptions"				     to="$(arg namespace)/move_base/local_costmap/parameter_descriptions" />
    <remap from="move_base/local_costmap/parameter_updates"				             to="$(arg namespace)/move_base/local_costmap/parameter_updates" />
    <remap from="move_base/parameter_descriptions"				                     to="$(arg namespace)/move_base/parameter_descriptions" />
    <remap from="move_base/parameter_updates"				                         to="$(arg namespace)/move_base/parameter_updates" />
    <remap from="move_base/recovery_status"				                             to="$(arg namespace)/move_base/recovery_status" />
    <remap from="move_base/result"				                                     to="$(arg namespace)/move_base/result" />
    <remap from="move_base/status"				                                     to="$(arg namespace)/move_base/status" />
  </node>

</launch>